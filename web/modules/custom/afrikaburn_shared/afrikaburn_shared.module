<?php

/**
 * @file
 * Contains Afrikaburn Shared module.
 */

use \Drupal\Core\Form\FormStateInterface;
use \Drupal\Core\Entity\EntityInterface;
use \Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use \Drupal\user\Entity\User;

/**
 * Implements hook_form_alter().
 * Hooked to attach form behaviour, hide revision section.
 */
function afrikaburn_shared_form_alter(&$form, $form_state, $form_id) {

  $user = User::load(\Drupal::currentUser()->id());
  $form['#attached']['library'][] = 'afrikaburn_shared/form';

  foreach(['node_art', 'node_performances', 'node_mutant_vehicles', 'node_theme_camps'] as $parent) {
    if (substr($form_id, 0, strlen($parent)) === $parent) {

      $form['revision_log']['#access'] = $user->hasRole('administrator');;
      $form['field_collective']['#access'] = $user->hasRole('administrator');;

      $cid = \Drupal::request()->query->get('field_collective');
      if ($cid) {
        $collective = \Drupal::entityTypeManager()->getStorage('node')->load($cid);
        $form['field_collective']['widget'][0]['target_id']['#default_value'] = $collective;
      } else {
        $registration = $form_state->getFormObject()->getEntity();
        if (!$registration->field_collective->getValue()[0]['target_id']) {
          throw new \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException();
        }
      }

    }
  }

  if (substr($form_id, 0, strlen('node_collective')) === 'node_collective') {
    $form['field_col_admins']['widget'][0]['target_id']['#default_value'] = $user;
    $form['field_col_admins']['#access'] = $user->hasRole('administrator');;
    $form['field_col_members']['widget'][0]['target_id']['#default_value'] = $user;
    $form['field_col_members']['#access'] = $user->hasRole('administrator');;
  }

  if ($form_id == 'user_form') {
    if (preg_match('/user\/reset/', \Drupal::request()->server->get('HTTP_REFERER'))) {
      $response = new Symfony\Component\HttpFoundation\RedirectResponse(\Drupal::url('<front>'));
      $response->send();
    }
  }
}

/**
 * Implements hook_preprocess_input().
 * Hooked to add autocomplete path parameters and change "Save" to "Submit"
 */
function afrikaburn_shared_preprocess_input(&$variables) {

  if (isset($variables['attributes']['data-autocomplete-path']) && $cid = \Drupal::request()->query->get('field_collective')){
    $variables['attributes']['data-autocomplete-path'] .= '?field_collective=' . $cid;
  }

  if (
    preg_match(
      '/node\/add\/(art|mutant_vehicles|performances|theme_camps)/', 
      \Drupal::service('path.current')->getPath()
    ) 
      && isset($variables['attributes']['value'])
      && $variables['attributes']['value'] == t('Save and publish')
  ) {
    $variables['attributes']['value'] = t('Submit');
  }
}

/**
 * Checks whether to display the project
 * @return [type] [description]
 */
function afrikaburn_shared_show_project_links(){

  $node = \Drupal::routeMatch()->getParameter('node');

  if ($node && $node->bundle() == 'collective'){
    $uid = \Drupal::currentUser()->id();
    foreach($node->field_col_admins as $admin){
      if ($admin->getValue()['target_id'] == $uid) return TRUE;
    }
  }

  return FALSE;
}
