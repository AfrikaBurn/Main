<?php

/**
 * @file
 * Contains Afrikaburn Shared module.
 */

use \Drupal\Core\Form\FormStateInterface;
use \Drupal\Core\Entity\EntityInterface;
use \Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use \Drupal\user\Entity\User;

/**
 * Implements hook_form_alter().
 */
function afrikaburn_shared_form_alter(&$form, $form_state, $form_id) {

  // dpm($form_id);

  // Redirect to front page after password reset
  if ($form_id == 'user_form') {
    if (preg_match('/user\/reset/', \Drupal::request()->server->get('HTTP_REFERER'))) {
      $response = new Symfony\Component\HttpFoundation\RedirectResponse(\Drupal::url('<front>'));
      $response->send();
    }
  }

  // Add ID validation
  if (in_array($form_id, ['user_form', 'user_register_form'])) {
    $form['#validate'][] = 'afrikaburn_shared_user_id_validate';    
  }

  // Fetch new quicket info on acceptance of agreements
  if (isset($form['#webform_id']) && in_array($form['#webform_id'], ['update', 'introduction'])){
    $form['actions']['submit']['#submit'][] = 'afrikaburn_shared_agreement_submit';
  }

  module_load_include('inc', 'afrikaburn_shared', 'includes/form');

  // Get Registration and Collective if applicable
  list($registration, $registration_title) = _get_registration();
  list($collective, $collective_title) = _get_collective($registration);

  // Set titles and defaults
  static $user;
  $user = isset($user) ? $user : User::load(\Drupal::currentUser()->id());
  _set_registration_form_title($form, $form_id, $collective_title, $registration_title);
  _set_registration_form_defaults($form, $form_id, $user, $collective);
  _set_collective_defaults($form, $form_id, $user);

}

/**
 * Implements hook_entity_update().
 */
function afrikaburn_shared_entity_update($entity){

  $user = $entity->getEntityType()->id() == 'user' ? $entity : FALSE;

  if ($user && $original_user = $user->original){

    // TODO: Add children
    $field_id_number = $user->get('field_id_number');
    $original_field_id_number = $original_user->get('field_id_number');
    $id_number = $field_id_number ? $field_id_number->getValue() : FALSE;
    $original_id_number = $original_field_id_number ? $original_field_id_number->getValue() : FALSE;
    
    // New code and ID
    if ($id_number != $original_id_number){
      module_load_include('inc', 'afrikaburn_shared', 'includes/quicket');
      _quicket_update($user);
    }

  }
}

/**
 * Implements hook_user_login().
 * Hooked to redirect users to the home page
 */
function afrikaburn_shared_user_login($account){
  if (\Drupal::service('path.current')->getPath() == '/user/login'){
    $response = new Symfony\Component\HttpFoundation\RedirectResponse(\Drupal::url('<front>'));
    $response->send();
  }
}

/**
 * Implements hook_preprocess_input().
 * Change "Save" to "Submit"
 */
function afrikaburn_shared_preprocess_input(&$variables) {
  if (
    preg_match(
      '/node\/add\/(art|mutant_vehicles|performances|theme_camps)/', 
      \Drupal::service('path.current')->getPath()
    ) 
      && isset($variables['attributes']['value'])
      && $variables['attributes']['value'] == t('Save and publish')
  ) {
    $variables['attributes']['value'] = t('Submit');
  }
}

/**
 * Implements hook_views_pre_view().
 * Hooked to set collective on drop down view selects
 */
function afrikaburn_shared_views_pre_view(\Drupal\views\ViewExecutable $view, $display_id, &$args){
  if ($view->id() == 'collective_members' && $display_id == 'entity_reference_1'){
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node && $node->field_collective){
      $args[0] = $node->field_collective->first()->getValue()['target_id'];
    } else if ($cid = \Drupal::request()->query->get('field_collective')) {
      $args[0] = $cid;
    }
  }
}

/* ---- Validators & Submit handlers ---- */


/**
 * ID number validation
 */
function afrikaburn_shared_user_id_validate($form, FormStateInterface &$form_state) {
  $id = $form_state->getValue('field_id_number')[0]['value'];
  if (isset($id)) {

    if (!preg_match('/^[a-zA-Z0-9]+$/', $id)){
      $form_state->setErrorByName('field_id_number', t('Only numbers and letters are allowed.'));
    }

    if ($user = $form_state->getFormObject()->getEntity()){

      $existing = db_query(
        '
          SELECT COUNT(entity_id)
          FROM {user__field_id_number}
          WHERE entity_id != :uid AND field_id_number_value = :id
        ',
        [
          ':uid' => $user->id(),
          ':id' => $id,
        ]
      )->fetchField();

      if ($existing) {
        $form_state->setErrorByName('field_id_number', t('This number is already in use.'));
      }

    } else {

      $existing = db_query(
        '
          SELECT COUNT(entity_id)
          FROM {user__field_id_number}
          WHERE field_id_number_value = :id
        ',
        [
          ':id' => $form_state->getValue('field_id_number')[0]['value'],
        ]
      )->fetchField();

      if ($existing) {
        $form_state->setErrorByName('field_id_number', t('This number is already in use.'));
      }      

    }
  }
}

/**
 * Agreement submission handler.
 */
function afrikaburn_shared_agreement_submit($form, $form_state){
  module_load_include('inc', 'afrikaburn_shared', 'includes/quicket');
  _quicket_new(User::load(\Drupal::currentUser()->id()));
}
