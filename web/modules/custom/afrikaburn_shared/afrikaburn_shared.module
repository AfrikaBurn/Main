<?php

/**
 * @file
 * Contains Afrikaburn Shared module.
 */

use \Drupal\Core\Form\FormStateInterface;
use \Drupal\Core\Entity\EntityInterface;
use \Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use \Drupal\user\Entity\User;

/**
 * Implements hook_form_alter().
 * Hooked to attach form behaviour, hide revision section.
 */
function afrikaburn_shared_form_alter(&$form, $form_state, $form_id) {

  static $user;
  $user = isset($user) ? $user : User::load(\Drupal::currentUser()->id());

  static $registration;
  static $registration_title;
  if (!isset($registration)) {
    $registration = \Drupal::routeMatch()->getParameter('node');
    if ($registration) {
      $registration_title = $registration->getTitle();
    }
  }

  static $collective;
  static $collective_title;
  if (!isset($collective)) {

    $cid = array_values(array_filter(
      [
        \Drupal::request()->query->get('field_collective'),
        $registration ? $registration->field_collective->getValue()[0]['target_id'] : FALSE,
      ]
    ));

    if ($cid[0]) {
      $collective = \Drupal::entityTypeManager()->getStorage('node')->load($cid[0]);
      $collective_title = '<div class="subtitle">by the ' . $collective->getTitle() . ' collective</div>';
    }
  }

  $titles = [
    'node_theme_camps_form' => t('Register a Theme Camp') . $collective_title,
    'node_art_form' => t('Register an Artwork') . $collective_title,
    'node_performances_form' => t('Register a Performance') . $collective_title,
    'node_theme_camps_edit_form' => t('Updating %title Theme Camp registration', ['%title' => $registration_title]) . $collective_title,
    'node_art_edit_form' => t('Updating %title Artwork registration', ['%title' => $registration_title]) . $collective_title,
    'node_performances_edit_form' => t('Uodating %title Performance registration', ['%title' => $registration_title]) . $collective_title,
  ];
  if (isset($titles[$form_id])){
    $form['#title'] = [
      '#type' => 'markup',
      '#markup' => $titles[$form_id],
    ];
  }

  $form['#attached']['library'][] = 'afrikaburn_shared/form';

  foreach(['node_art', 'node_performances', 'node_mutant_vehicles', 'node_theme_camps'] as $parent) {
    if (substr($form_id, 0, strlen($parent)) === $parent) {

      $form['revision_log']['#access'] = $user->hasRole('administrator');
      $form['field_collective']['#access'] = $user->hasRole('administrator');

      if ($collective) {
        $form['field_collective']['widget'][0]['target_id']['#default_value'] = $collective;
      } else {
        $registration = $form_state->getFormObject()->getEntity();
        if (!$registration->field_collective->getValue()[0]['target_id']) {
          throw new \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException();
        }
      }

    }
  }

  if (substr($form_id, 0, strlen('node_collective')) === 'node_collective') {
    $form['field_col_admins']['#access'] = $user->hasRole('administrator');
    $form['field_col_members']['#access'] = $user->hasRole('administrator');
    if ($form_id == 'node_collective_form'){
      $form['field_col_admins']['widget'][0]['target_id']['#default_value'] = $user;
      $form['field_col_members']['widget'][0]['target_id']['#default_value'] = $user;      
    }
  }

  if ($form_id == 'user_form') {
    if (preg_match('/user\/reset/', \Drupal::request()->server->get('HTTP_REFERER'))) {
      $response = new Symfony\Component\HttpFoundation\RedirectResponse(\Drupal::url('<front>'));
      $response->send();
    }
  }
}

/**
 * Implements hook_preprocess_input().
 * Add autocomplete path parameters 
 * Change "Save" to "Submit"
 */
function afrikaburn_shared_preprocess_input(&$variables) {

  // Set the field_collective parameter
  if (isset($variables['attributes']['data-autocomplete-path'])){

    static $cid;
    if (!isset($cid)) {
      $cid = \Drupal::request()->query->get('field_collective');
      if (!$cid) {
        $node = \Drupal::routeMatch()->getParameter('node');
        if (isset($node) && $node->bundle() == 'collective') {
          $cid = $node->id();
        }
      }
    }

    if ($cid) {
      $variables['attributes']['data-autocomplete-path'] .= '?field_collective=' . $cid;
    }
  }

  // Change Save to Submit
  if (
    preg_match(
      '/node\/add\/(art|mutant_vehicles|performances|theme_camps)/', 
      \Drupal::service('path.current')->getPath()
    ) 
      && isset($variables['attributes']['value'])
      && $variables['attributes']['value'] == t('Save and publish')
  ) {
    $variables['attributes']['value'] = t('Submit');
  }
}

/**
 * Checks whether to display the project links
 */
function afrikaburn_shared_show_project_links(){

  $node = \Drupal::routeMatch()->getParameter('node');

  if ($node && $node->bundle() == 'collective'){
    $uid = \Drupal::currentUser()->id();
    foreach($node->field_col_admins as $admin){
      if ($admin->getValue()['target_id'] == $uid) return TRUE;
    }
  }

  return FALSE;
}
